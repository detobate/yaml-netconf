<?xml version='1.0' encoding='UTF-8'?>
  <data xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
    <access-lists xmlns="urn:ietf:params:xml:ns:yang:ietf-access-control-list">
      <acl>
        <acl-oper-data />
        <access-list-entries>
{% set count = [1] %}
{% for rule in ACL['rules'] %}
{% if rule['source'] is string %}
    {%- set sources = [rule['source']] -%}
{% else %}
    {%- set sources = rule['source'] -%}
{% endif %}
{% for source in sources %}
{% if rule['dest'] is string %}
    {%- set destinations = [rule['dest']] -%}
{% else %}
    {%- set destinations = rule['dest'] -%}
{% endif %}
{% for dest in destinations %}
          <ace>
            <matches>
{# DESTINATION ADDRESS MATCHING BEGINS #}
{% if ACL['acl_type'] == "ipv4-acl" and dest != "any" %}
              <destination-ipv4-network>
                  {{ dest }}
              </destination-ipv4-network>
              <destination-ipv6-network />
{% elif ACL['acl_type'] == "ipv6-acl" and dest != "any" %}
              <destination-ipv4-network />
              <destination-ipv6-network>
                {{ dest }}
              </destination-ipv6-network>
{% elif source is none or dest == "any" %}
              <destination-ipv4-network />
              <destination-ipv6-network />
{% endif %}
{# SOURCE ADDRESS MATCHING BEGINS #}
{% if ACL['acl_type'] == "ipv4-acl" and source is not none and source != "any" %}
              <source-ipv4-network>
                  {{ source }}
              </source-ipv4-network>
              <source-ipv6-network />
{% elif ACL['acl_type'] == "ipv6-acl" and source is not none and source != "any" %}
              <source-ipv4-network />
              <source-ipv6-network>
                {{ source }}
              </source-ipv6-network>
{% elif source is none or source == "any" %}
              <source-ipv4-network />
              <source-ipv6-network />
{% endif %}
              <flow-label />
              <dscp />
{% if rule['proto'] is not none and rule['proto'] != "any" %}
              <protocol>
                {{ rule['proto'] }}
              </protocol>
{% else %}
              <protocol />
{% endif %}
{# SOURCE PORT MATCHING BEGINS #}
              <source-port-range>
{% if rule['sport']['startrange'] is defined and rule['sport']['endrange'] is defined %}
                <lower-port>
                  {{ rule['sport']['startrange'] }}
                </lower-port>
                <upper-port>
                  {{ rule['sport']['endrange'] }}
                </upper-port>
{% endif %}
{% if rule['sport'] == "any"  %}
                <lower-port />
                <upper-port />
{% else %}
                <lower-port>
                  {{ rule['sport'] }}
                </lower-port>
                <upper-port />
{% endif %}
              </source-port-range>
{# DESTINATION PORT MATCHING BEGINS #}
              <destination-port-range>
{% if rule['dport']['startrange'] is defined and rule['dport']['endrange'] is defined %}
                <lower-port>
                  {{ rule['dport']['startrange'] }}
                </lower-port>
                <upper-port>
                  {{ rule['dport']['endrange'] }}
                </upper-port>
{% endif %}
{% if rule['dport'] == "any"  %}
                <lower-port />
                <upper-port />
{% else %}
                <lower-port>
                  {{ rule['dport'] }}
                </lower-port>
                <upper-port />
{% endif %}
              </destination-port-range>
{# ETHERNET / LAYER2 MATCHING BEGINS #}
{% if ACL['acl_type'] != "eth-acl" %}
              <destination-mac-address />
              <destination-mac-address-mask />
              <source-mac-address />
              <source-mac-address-mask />
              <input-interface />
{% endif %}
            </matches>
            <actions>
              <{{ rule['actions'] }} />
            </actions>
            <ace-oper-data>
              <match-counter />
            </ace-oper-data>
            <rule-name>rule{{ count[0] }}</rule-name>
          </ace>
{% if count.append(count.pop() + 1) %}{% endif %} {# increment count by 1 #}
{% endfor %}
{% endfor %}
{% endfor %}
        </access-list-entries>
        <acl-name></acl-name>
       <acl-type>{{ ACL['acl_type'] }}</acl-type>
     </acl>
   </access-lists>
</data>
